/*
    Copyright 2005-2016 Intel Corporation.  All Rights Reserved.

    The source code contained or described herein and all documents related
    to the source code ("Material") are owned by Intel Corporation or its
    suppliers or licensors.  Title to the Material remains with Intel
    Corporation or its suppliers and licensors.  The Material is protected
    by worldwide copyright laws and treaty provisions.  No part of the
    Material may be used, copied, reproduced, modified, published, uploaded,
    posted, transmitted, distributed, or disclosed in any way without
    Intel's prior express written permission.

    No license under any patent, copyright, trade secret or other
    intellectual property right is granted to or conferred upon you by
    disclosure or delivery of the Materials, either expressly, by
    implication, inducement, estoppel or otherwise.  Any license under such
    intellectual property rights must be express and approved by Intel in
    writing.
*/

#ifndef __TBB_thread_H
#define __TBB_thread_H

#include "../tbb_config.h"

#if TBB_IMPLEMENT_CPP0X

#include "../tbb_thread.h"

namespace std {

typedef tbb::tbb_thread thread;

namespace this_thread {
    using tbb::this_tbb_thread::get_id;
    using tbb::this_tbb_thread::yield;

    inline void sleep_for(const tbb::tick_count::interval_t& rel_time) {
        tbb::internal::thread_sleep_v3( rel_time );
    }
}

} // namespace std

#else /* TBB_IMPLEMENT_CPP0X */

#define __TBB_COMPAT_THREAD_RECURSION_PROTECTOR 1
#include <thread>
#undef __TBB_COMPAT_THREAD_RECURSION_PROTECTOR

#endif /* TBB_IMPLEMENT_CPP0X */

#else /* __TBB_thread_H */

#if __TBB_COMPAT_THREAD_RECURSION_PROTECTOR
#error The tbb/compat/thread header attempts to include itself. \
       Please make sure that {TBBROOT}/include/tbb/compat is NOT in include paths.
#endif

#endif /* __TBB_thread_H */
